package com.harini.core.exceptionalHandling;
/*
--throw keyword: to throw an exception explicitly within a method.
The exception object which is to be thrown must be specified.
The Exception has some message with it that provides the error description.
These exceptions may be related to user inputs, server, etc.
Execution of the current method will stop (the statements after throw won't be executed), and the control will be gone to the caller or the first catch block

Example: throw new exception_class("error message");
         throw new IOException("sorry device error");
             Where the Instance must be of type Throwable or subclass of Throwable.
Note:
If we throw a checked exception using throw keyword, it is must to handle the exception using catch block or the method must declare it using throws declaration.
 */

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.PrintWriter;


// Sample Example using throw keyword
class throwExample4 {
    public static void main(String args[]) {
        try{
            System.out.println("Task1");
            throw new Exception("Throwing a message"); // generates an Exception Object with a message
        }catch(Exception e) {
            System.out.println(e);  // prints the error message generated by the exception object
        }
        System.out.println("rest of the code...");
    }
}

// Throwing Unchecked Exception  ArithmeticException
public class throwExample {
    static void validate(int age) {
        if(age<18) {
            throw new ArithmeticException("No right to vote");
        }
        else {
            System.out.println("Right ti Vote");
        }
    }
    public static void main(String args[]) {
        validate(13);
        System.out.println("rest of the code...");

    }
}

// Throwing Checked Exception  FileNotFoundException
class throwExample2 {
    static void method() throws FileNotFoundException {
        PrintWriter pw = new PrintWriter("file1.txt");
        pw.println("saved");
        throw new FileNotFoundException();
    }
    public static void main(String args[]) {
        try {
            method();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        System.out.println("rest of the code...");

    }
}

// Throwing User-defined Exception
class UserDefinedException extends Exception {  // Custom exceptions must extend Exception class
    public UserDefinedException(String str) {
        System.out.println(str);
    }
}

class throwExample3 {
    public static void main(String args[]) {
        try{
            throw new UserDefinedException("this is user defined exception");
        } catch (UserDefinedException ude) {
            System.out.println("Print ude: " + ude);
           System.out.println( "fillInStackTrace " + ude.fillInStackTrace());
            ude.printStackTrace();
            System.out.println("GetMessage " + ude.getMessage());
            System.out.println( "getStackTrace " +ude.getStackTrace());
        }
    }
}



